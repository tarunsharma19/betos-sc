"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecretsTask = exports.BoundTask = exports.RoundTask = exports.ComparisonTask = exports.EwmaTask = exports.VwapTask = exports.HistoryFunctionTask = exports.MinTask = exports.CronParseTask = exports.BufferLayoutParseTask = exports.SolanaAccountDataFetchTask = exports.MarinadeStateTask = exports.SysclockOffsetTask = exports.CacheTask = exports.PancakeswapExchangeRateTask = exports.SushiswapExchangeRateTask = exports.UniswapExchangeRateTask = exports.SplTokenParseTask = exports.SplStakePoolTask = exports.AnchorFetchTask = exports.OracleTask = exports.PerpMarketTask = exports.JupiterSwapTask = exports.MangoPerpMarketTask = exports.LendingRateTask = exports.PowTask = exports.SerumSwapTask = exports.TwapTask = exports.SubtractTask = exports.AddTask = exports.XStepPriceTask = exports.RegexExtractTask = exports.MaxTask = exports.ValueTask = exports.ConditionalTask = exports.LpExchangeRateTask = exports.LpTokenPriceTask = exports.MultiplyTask = exports.DivideTask = exports.WebsocketTask = exports.MeanTask = exports.MedianTask = exports.JsonParseTask = exports.HttpTask = exports.Task = exports.OracleJob = void 0;
const minimal_js_1 = __importDefault(require("protobufjs/minimal.js"));
minimal_js_1.default.util.toJSONOptions = {
    longs: String,
    enums: String,
    bytes: String,
    json: true,
    // oneofs: true,
};
const index_js_1 = require("./protos/index.cjs");
exports.OracleJob = index_js_1.oracle_job.OracleJob;
exports.Task = exports.OracleJob.Task;
exports.HttpTask = exports.OracleJob.HttpTask;
exports.JsonParseTask = exports.OracleJob.JsonParseTask;
exports.MedianTask = exports.OracleJob.MedianTask;
exports.MeanTask = exports.OracleJob.MeanTask;
exports.WebsocketTask = exports.OracleJob.WebsocketTask;
exports.DivideTask = exports.OracleJob.DivideTask;
exports.MultiplyTask = exports.OracleJob.MultiplyTask;
exports.LpTokenPriceTask = exports.OracleJob.LpTokenPriceTask;
exports.LpExchangeRateTask = exports.OracleJob.LpExchangeRateTask;
exports.ConditionalTask = exports.OracleJob.ConditionalTask;
exports.ValueTask = exports.OracleJob.ValueTask;
exports.MaxTask = exports.OracleJob.MaxTask;
exports.RegexExtractTask = exports.OracleJob.RegexExtractTask;
exports.XStepPriceTask = exports.OracleJob.XStepPriceTask;
exports.AddTask = exports.OracleJob.AddTask;
exports.SubtractTask = exports.OracleJob.SubtractTask;
exports.TwapTask = exports.OracleJob.TwapTask;
exports.SerumSwapTask = exports.OracleJob.SerumSwapTask;
exports.PowTask = exports.OracleJob.PowTask;
exports.LendingRateTask = exports.OracleJob.LendingRateTask;
exports.MangoPerpMarketTask = exports.OracleJob.MangoPerpMarketTask;
exports.JupiterSwapTask = exports.OracleJob.JupiterSwapTask;
exports.PerpMarketTask = exports.OracleJob.PerpMarketTask;
exports.OracleTask = exports.OracleJob.OracleTask;
exports.AnchorFetchTask = exports.OracleJob.AnchorFetchTask;
exports.SplStakePoolTask = exports.OracleJob.SplStakePoolTask;
exports.SplTokenParseTask = exports.OracleJob.SplTokenParseTask;
exports.UniswapExchangeRateTask = exports.OracleJob.UniswapExchangeRateTask;
exports.SushiswapExchangeRateTask = exports.OracleJob.SushiswapExchangeRateTask;
exports.PancakeswapExchangeRateTask = exports.OracleJob.PancakeswapExchangeRateTask;
exports.CacheTask = exports.OracleJob.CacheTask;
exports.SysclockOffsetTask = exports.OracleJob.SysclockOffsetTask;
exports.MarinadeStateTask = exports.OracleJob.MarinadeStateTask;
exports.SolanaAccountDataFetchTask = exports.OracleJob.SolanaAccountDataFetchTask;
exports.BufferLayoutParseTask = exports.OracleJob.BufferLayoutParseTask;
exports.CronParseTask = exports.OracleJob.CronParseTask;
exports.MinTask = exports.OracleJob.MinTask;
exports.HistoryFunctionTask = exports.OracleJob.HistoryFunctionTask;
exports.VwapTask = exports.OracleJob.VwapTask;
exports.EwmaTask = exports.OracleJob.EwmaTask;
exports.ComparisonTask = exports.OracleJob.ComparisonTask;
exports.RoundTask = exports.OracleJob.RoundTask;
exports.BoundTask = exports.OracleJob.BoundTask;
exports.SecretsTask = exports.OracleJob.SecretsTask;
//# sourceMappingURL=data:application/json;base64,