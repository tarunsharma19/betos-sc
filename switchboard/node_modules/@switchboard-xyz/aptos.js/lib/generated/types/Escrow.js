import * as types from "./index.js"; // eslint-disable-line @typescript-eslint/no-unused-vars
import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class Escrow {
    createdAt;
    authority;
    escrow;
    features;
    _ebuf;
    constructor(fields) {
        this.createdAt = fields.createdAt;
        this.authority = fields.authority;
        this.escrow = fields.escrow;
        this.features = fields.features;
        this._ebuf = fields._ebuf;
    }
    toJSON() {
        return {
            createdAt: this.createdAt.toString(),
            authority: this.authority.toString(),
            escrow: this.escrow.toJSON(),
            features: this.features.map((item) => item),
            _ebuf: [...this._ebuf],
        };
    }
    static fromJSON(obj) {
        return new Escrow({
            createdAt: new BN(obj.createdAt),
            authority: obj.authority,
            escrow: types.Coin.fromJSON(obj.escrow),
            features: obj.features.map((item) => item),
            _ebuf: new Uint8Array(obj._ebuf),
        });
    }
    toMoveStruct() {
        return {
            created_at: this.createdAt.toString(),
            authority: this.authority.toString(),
            escrow: this.escrow.toMoveStruct(),
            features: this.features.map((item) => item),
            _ebuf: Buffer.from(this._ebuf).toString("hex"),
        };
    }
    static fromMoveStruct(obj) {
        return new Escrow({
            createdAt: new BN(obj.created_at),
            authority: obj.authority,
            escrow: types.Coin.fromMoveStruct(obj.escrow),
            features: obj.features.map((item) => item),
            _ebuf: typeof obj._ebuf === "string"
                ? new Uint8Array(Buffer.from(obj._ebuf.slice(2), "hex"))
                : new Uint8Array(obj._ebuf),
        });
    }
}
