import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class LeaseWithdrawEvent {
    leaseAddress;
    destinationWallet;
    previousAmount;
    newAmount;
    timestamp;
    constructor(fields) {
        this.leaseAddress = fields.leaseAddress;
        this.destinationWallet = fields.destinationWallet;
        this.previousAmount = fields.previousAmount;
        this.newAmount = fields.newAmount;
        this.timestamp = fields.timestamp;
    }
    toJSON() {
        return {
            leaseAddress: this.leaseAddress.toString(),
            destinationWallet: this.destinationWallet.toString(),
            previousAmount: this.previousAmount.toString(),
            newAmount: this.newAmount.toString(),
            timestamp: this.timestamp.toString(),
        };
    }
    static fromJSON(obj) {
        return new LeaseWithdrawEvent({
            leaseAddress: obj.leaseAddress,
            destinationWallet: obj.destinationWallet,
            previousAmount: new BN(obj.previousAmount),
            newAmount: new BN(obj.newAmount),
            timestamp: new BN(obj.timestamp),
        });
    }
    toMoveStruct() {
        return {
            lease_address: this.leaseAddress.toString(),
            destination_wallet: this.destinationWallet.toString(),
            previous_amount: this.previousAmount.toString(),
            new_amount: this.newAmount.toString(),
            timestamp: this.timestamp.toString(),
        };
    }
    static fromMoveStruct(obj) {
        return new LeaseWithdrawEvent({
            leaseAddress: obj.lease_address,
            destinationWallet: obj.destination_wallet,
            previousAmount: new BN(obj.previous_amount),
            newAmount: new BN(obj.new_amount),
            timestamp: new BN(obj.timestamp),
        });
    }
}
