"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LeaseInitParams = void 0;
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class LeaseInitParams {
    aggregatorAddr;
    queueAddr;
    withdrawAuthority;
    initialAmount;
    constructor(fields) {
        this.aggregatorAddr = fields.aggregatorAddr;
        this.queueAddr = fields.queueAddr;
        this.withdrawAuthority = fields.withdrawAuthority;
        this.initialAmount = fields.initialAmount;
    }
    toJSON() {
        return {
            aggregatorAddr: this.aggregatorAddr.toString(),
            queueAddr: this.queueAddr.toString(),
            withdrawAuthority: this.withdrawAuthority.toString(),
            initialAmount: this.initialAmount.toString(),
        };
    }
    static fromJSON(obj) {
        return new LeaseInitParams({
            aggregatorAddr: obj.aggregatorAddr,
            queueAddr: obj.queueAddr,
            withdrawAuthority: obj.withdrawAuthority,
            initialAmount: new common_1.BN(obj.initialAmount),
        });
    }
    toMoveStruct() {
        return {
            aggregator_addr: this.aggregatorAddr.toString(),
            queue_addr: this.queueAddr.toString(),
            withdraw_authority: this.withdrawAuthority.toString(),
            initial_amount: this.initialAmount.toString(),
        };
    }
    static fromMoveStruct(obj) {
        return new LeaseInitParams({
            aggregatorAddr: obj.aggregator_addr,
            queueAddr: obj.queue_addr,
            withdrawAuthority: obj.withdraw_authority,
            initialAmount: new common_1.BN(obj.initial_amount),
        });
    }
}
exports.LeaseInitParams = LeaseInitParams;
