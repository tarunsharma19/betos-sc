import { BN } from "@switchboard-xyz/common"; // eslint-disable-line @typescript-eslint/no-unused-vars
export class Permission {
    authority;
    permissions;
    granter;
    grantee;
    createdAt;
    updatedAt;
    features;
    _ebuf;
    constructor(fields) {
        this.authority = fields.authority;
        this.permissions = fields.permissions;
        this.granter = fields.granter;
        this.grantee = fields.grantee;
        this.createdAt = fields.createdAt;
        this.updatedAt = fields.updatedAt;
        this.features = fields.features;
        this._ebuf = fields._ebuf;
    }
    toJSON() {
        return {
            authority: this.authority.toString(),
            permissions: this.permissions.toString(),
            granter: this.granter.toString(),
            grantee: this.grantee.toString(),
            createdAt: this.createdAt.toString(),
            updatedAt: this.updatedAt.toString(),
            features: this.features.map((item) => item),
            _ebuf: [...this._ebuf],
        };
    }
    static fromJSON(obj) {
        return new Permission({
            authority: obj.authority,
            permissions: new BN(obj.permissions),
            granter: obj.granter,
            grantee: obj.grantee,
            createdAt: new BN(obj.createdAt),
            updatedAt: new BN(obj.updatedAt),
            features: obj.features.map((item) => item),
            _ebuf: new Uint8Array(obj._ebuf),
        });
    }
    toMoveStruct() {
        return {
            authority: this.authority.toString(),
            permissions: this.permissions.toString(),
            granter: this.granter.toString(),
            grantee: this.grantee.toString(),
            created_at: this.createdAt.toString(),
            updated_at: this.updatedAt.toString(),
            features: this.features.map((item) => item),
            _ebuf: Buffer.from(this._ebuf).toString("hex"),
        };
    }
    static fromMoveStruct(obj) {
        return new Permission({
            authority: obj.authority,
            permissions: new BN(obj.permissions),
            granter: obj.granter,
            grantee: obj.grantee,
            createdAt: new BN(obj.created_at),
            updatedAt: new BN(obj.updated_at),
            features: obj.features.map((item) => item),
            _ebuf: typeof obj._ebuf === "string"
                ? new Uint8Array(Buffer.from(obj._ebuf.slice(2), "hex"))
                : new Uint8Array(obj._ebuf),
        });
    }
}
