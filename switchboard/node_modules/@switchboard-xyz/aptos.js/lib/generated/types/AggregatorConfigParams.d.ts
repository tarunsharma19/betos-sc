import * as types from "./index.js";
import type { AccountAddressInput } from "@aptos-labs/ts-sdk";
import { BN } from "@switchboard-xyz/common";
export interface IAggregatorConfigParams {
    addr: AccountAddressInput;
    name: Uint8Array;
    metadata: Uint8Array;
    queueAddr: AccountAddressInput;
    crankAddr: AccountAddressInput;
    batchSize: BN;
    minOracleResults: BN;
    minJobResults: BN;
    minUpdateDelaySeconds: BN;
    startAfter: BN;
    varianceThreshold: types.SwitchboardDecimal;
    forceReportPeriod: BN;
    expiration: BN;
    disableCrank: boolean;
    historyLimit: BN;
    readCharge: BN;
    rewardEscrow: AccountAddressInput;
    readWhitelist: Array<AccountAddressInput>;
    limitReadsToWhitelist: boolean;
    authority: AccountAddressInput;
}
export interface AggregatorConfigParamsJSON {
    addr: string;
    name: Array<number>;
    metadata: Array<number>;
    queueAddr: string;
    crankAddr: string;
    batchSize: string;
    minOracleResults: string;
    minJobResults: string;
    minUpdateDelaySeconds: string;
    startAfter: string;
    varianceThreshold: types.SwitchboardDecimalJSON;
    forceReportPeriod: string;
    expiration: string;
    disableCrank: boolean;
    historyLimit: string;
    readCharge: string;
    rewardEscrow: string;
    readWhitelist: Array<string>;
    limitReadsToWhitelist: boolean;
    authority: string;
}
export interface AggregatorConfigParamsMoveStruct {
    addr: string;
    name: string;
    metadata: string;
    queue_addr: string;
    crank_addr: string;
    batch_size: string;
    min_oracle_results: string;
    min_job_results: string;
    min_update_delay_seconds: string;
    start_after: string;
    variance_threshold: types.SwitchboardDecimalMoveStruct;
    force_report_period: string;
    expiration: string;
    disable_crank: boolean;
    history_limit: string;
    read_charge: string;
    reward_escrow: string;
    read_whitelist: Array<string>;
    limit_reads_to_whitelist: boolean;
    authority: string;
}
export declare class AggregatorConfigParams implements IAggregatorConfigParams {
    readonly addr: AccountAddressInput;
    readonly name: Uint8Array;
    readonly metadata: Uint8Array;
    readonly queueAddr: AccountAddressInput;
    readonly crankAddr: AccountAddressInput;
    readonly batchSize: BN;
    readonly minOracleResults: BN;
    readonly minJobResults: BN;
    readonly minUpdateDelaySeconds: BN;
    readonly startAfter: BN;
    readonly varianceThreshold: types.SwitchboardDecimal;
    readonly forceReportPeriod: BN;
    readonly expiration: BN;
    readonly disableCrank: boolean;
    readonly historyLimit: BN;
    readonly readCharge: BN;
    readonly rewardEscrow: AccountAddressInput;
    readonly readWhitelist: Array<AccountAddressInput>;
    readonly limitReadsToWhitelist: boolean;
    readonly authority: AccountAddressInput;
    constructor(fields: IAggregatorConfigParams);
    toJSON(): AggregatorConfigParamsJSON;
    static fromJSON(obj: AggregatorConfigParamsJSON): types.AggregatorConfigParams;
    toMoveStruct(): AggregatorConfigParamsMoveStruct;
    static fromMoveStruct(obj: AggregatorConfigParamsMoveStruct): types.AggregatorConfigParams;
}
//# sourceMappingURL=AggregatorConfigParams.d.ts.map