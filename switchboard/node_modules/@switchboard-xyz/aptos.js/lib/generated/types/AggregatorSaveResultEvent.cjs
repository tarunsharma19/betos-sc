"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregatorSaveResultEvent = void 0;
const types = __importStar(require("./index.cjs")); // eslint-disable-line @typescript-eslint/no-unused-vars
class AggregatorSaveResultEvent {
    aggregatorAddress;
    oracleKey;
    value;
    constructor(fields) {
        this.aggregatorAddress = fields.aggregatorAddress;
        this.oracleKey = fields.oracleKey;
        this.value = fields.value;
    }
    toJSON() {
        return {
            aggregatorAddress: this.aggregatorAddress.toString(),
            oracleKey: this.oracleKey.toString(),
            value: this.value.toJSON(),
        };
    }
    static fromJSON(obj) {
        return new AggregatorSaveResultEvent({
            aggregatorAddress: obj.aggregatorAddress,
            oracleKey: obj.oracleKey,
            value: types.SwitchboardDecimal.fromJSON(obj.value),
        });
    }
    toMoveStruct() {
        return {
            aggregator_address: this.aggregatorAddress.toString(),
            oracle_key: this.oracleKey.toString(),
            value: this.value.toMoveStruct(),
        };
    }
    static fromMoveStruct(obj) {
        return new AggregatorSaveResultEvent({
            aggregatorAddress: obj.aggregator_address,
            oracleKey: obj.oracle_key,
            value: types.SwitchboardDecimal.fromMoveStruct(obj.value),
        });
    }
}
exports.AggregatorSaveResultEvent = AggregatorSaveResultEvent;
