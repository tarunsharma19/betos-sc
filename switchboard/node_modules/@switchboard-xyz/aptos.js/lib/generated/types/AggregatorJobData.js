export class AggregatorJobData {
    jobKeys;
    jobWeights;
    jobsChecksum;
    constructor(fields) {
        this.jobKeys = fields.jobKeys;
        this.jobWeights = fields.jobWeights;
        this.jobsChecksum = fields.jobsChecksum;
    }
    toJSON() {
        return {
            jobKeys: this.jobKeys.map((item) => item.toString()),
            jobWeights: [...this.jobWeights],
            jobsChecksum: [...this.jobsChecksum],
        };
    }
    static fromJSON(obj) {
        return new AggregatorJobData({
            jobKeys: obj.jobKeys,
            jobWeights: new Uint8Array(obj.jobWeights),
            jobsChecksum: new Uint8Array(obj.jobsChecksum),
        });
    }
    toMoveStruct() {
        return {
            job_keys: this.jobKeys.map((item) => item.toString()),
            job_weights: Buffer.from(this.jobWeights).toString("hex"),
            jobs_checksum: Buffer.from(this.jobsChecksum).toString("hex"),
        };
    }
    static fromMoveStruct(obj) {
        return new AggregatorJobData({
            jobKeys: obj.job_keys,
            jobWeights: typeof obj.job_weights === "string"
                ? new Uint8Array(Buffer.from(obj.job_weights.slice(2), "hex"))
                : new Uint8Array(obj.job_weights),
            jobsChecksum: typeof obj.jobs_checksum === "string"
                ? new Uint8Array(Buffer.from(obj.jobs_checksum.slice(2), "hex"))
                : new Uint8Array(obj.jobs_checksum),
        });
    }
}
