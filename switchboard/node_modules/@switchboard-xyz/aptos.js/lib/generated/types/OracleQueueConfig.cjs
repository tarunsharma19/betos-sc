"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OracleQueueConfig = void 0;
const types = __importStar(require("./index.cjs")); // eslint-disable-line @typescript-eslint/no-unused-vars
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class OracleQueueConfig {
    authority;
    reward;
    openRoundReward;
    saveReward;
    saveConfirmationReward;
    slashingPenalty;
    slashingEnabled;
    unpermissionedFeedsEnabled;
    varianceToleranceMultiplier;
    oracleTimeout;
    constructor(fields) {
        this.authority = fields.authority;
        this.reward = fields.reward;
        this.openRoundReward = fields.openRoundReward;
        this.saveReward = fields.saveReward;
        this.saveConfirmationReward = fields.saveConfirmationReward;
        this.slashingPenalty = fields.slashingPenalty;
        this.slashingEnabled = fields.slashingEnabled;
        this.unpermissionedFeedsEnabled = fields.unpermissionedFeedsEnabled;
        this.varianceToleranceMultiplier = fields.varianceToleranceMultiplier;
        this.oracleTimeout = fields.oracleTimeout;
    }
    toJSON() {
        return {
            authority: this.authority.toString(),
            reward: this.reward.toString(),
            openRoundReward: this.openRoundReward.toString(),
            saveReward: this.saveReward.toString(),
            saveConfirmationReward: this.saveConfirmationReward.toString(),
            slashingPenalty: this.slashingPenalty.toString(),
            slashingEnabled: this.slashingEnabled,
            unpermissionedFeedsEnabled: this.unpermissionedFeedsEnabled,
            varianceToleranceMultiplier: this.varianceToleranceMultiplier.toJSON(),
            oracleTimeout: this.oracleTimeout.toString(),
        };
    }
    static fromJSON(obj) {
        return new OracleQueueConfig({
            authority: obj.authority,
            reward: new common_1.BN(obj.reward),
            openRoundReward: new common_1.BN(obj.openRoundReward),
            saveReward: new common_1.BN(obj.saveReward),
            saveConfirmationReward: new common_1.BN(obj.saveConfirmationReward),
            slashingPenalty: new common_1.BN(obj.slashingPenalty),
            slashingEnabled: obj.slashingEnabled,
            unpermissionedFeedsEnabled: obj.unpermissionedFeedsEnabled,
            varianceToleranceMultiplier: types.SwitchboardDecimal.fromJSON(obj.varianceToleranceMultiplier),
            oracleTimeout: new common_1.BN(obj.oracleTimeout),
        });
    }
    toMoveStruct() {
        return {
            authority: this.authority.toString(),
            reward: this.reward.toString(),
            open_round_reward: this.openRoundReward.toString(),
            save_reward: this.saveReward.toString(),
            save_confirmation_reward: this.saveConfirmationReward.toString(),
            slashing_penalty: this.slashingPenalty.toString(),
            slashing_enabled: this.slashingEnabled,
            unpermissioned_feeds_enabled: this.unpermissionedFeedsEnabled,
            variance_tolerance_multiplier: this.varianceToleranceMultiplier.toMoveStruct(),
            oracle_timeout: this.oracleTimeout.toString(),
        };
    }
    static fromMoveStruct(obj) {
        return new OracleQueueConfig({
            authority: obj.authority,
            reward: new common_1.BN(obj.reward),
            openRoundReward: new common_1.BN(obj.open_round_reward),
            saveReward: new common_1.BN(obj.save_reward),
            saveConfirmationReward: new common_1.BN(obj.save_confirmation_reward),
            slashingPenalty: new common_1.BN(obj.slashing_penalty),
            slashingEnabled: obj.slashing_enabled,
            unpermissionedFeedsEnabled: obj.unpermissioned_feeds_enabled,
            varianceToleranceMultiplier: types.SwitchboardDecimal.fromMoveStruct(obj.variance_tolerance_multiplier),
            oracleTimeout: new common_1.BN(obj.oracle_timeout),
        });
    }
}
exports.OracleQueueConfig = OracleQueueConfig;
