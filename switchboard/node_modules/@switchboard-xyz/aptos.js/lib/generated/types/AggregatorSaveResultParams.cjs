"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregatorSaveResultParams = void 0;
const types = __importStar(require("./index.cjs")); // eslint-disable-line @typescript-eslint/no-unused-vars
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class AggregatorSaveResultParams {
    oracleAddr;
    aggregatorAddr;
    oracleIdx;
    error;
    value;
    jobsChecksum;
    minResponse;
    maxResponse;
    constructor(fields) {
        this.oracleAddr = fields.oracleAddr;
        this.aggregatorAddr = fields.aggregatorAddr;
        this.oracleIdx = fields.oracleIdx;
        this.error = fields.error;
        this.value = fields.value;
        this.jobsChecksum = fields.jobsChecksum;
        this.minResponse = fields.minResponse;
        this.maxResponse = fields.maxResponse;
    }
    toJSON() {
        return {
            oracleAddr: this.oracleAddr.toString(),
            aggregatorAddr: this.aggregatorAddr.toString(),
            oracleIdx: this.oracleIdx.toString(),
            error: this.error,
            value: this.value.toJSON(),
            jobsChecksum: [...this.jobsChecksum],
            minResponse: this.minResponse.toJSON(),
            maxResponse: this.maxResponse.toJSON(),
        };
    }
    static fromJSON(obj) {
        return new AggregatorSaveResultParams({
            oracleAddr: obj.oracleAddr,
            aggregatorAddr: obj.aggregatorAddr,
            oracleIdx: new common_1.BN(obj.oracleIdx),
            error: obj.error,
            value: types.SwitchboardDecimal.fromJSON(obj.value),
            jobsChecksum: new Uint8Array(obj.jobsChecksum),
            minResponse: types.SwitchboardDecimal.fromJSON(obj.minResponse),
            maxResponse: types.SwitchboardDecimal.fromJSON(obj.maxResponse),
        });
    }
    toMoveStruct() {
        return {
            oracle_addr: this.oracleAddr.toString(),
            aggregator_addr: this.aggregatorAddr.toString(),
            oracle_idx: this.oracleIdx.toString(),
            error: this.error,
            value: this.value.toMoveStruct(),
            jobs_checksum: Buffer.from(this.jobsChecksum).toString("hex"),
            min_response: this.minResponse.toMoveStruct(),
            max_response: this.maxResponse.toMoveStruct(),
        };
    }
    static fromMoveStruct(obj) {
        return new AggregatorSaveResultParams({
            oracleAddr: obj.oracle_addr,
            aggregatorAddr: obj.aggregator_addr,
            oracleIdx: new common_1.BN(obj.oracle_idx),
            error: obj.error,
            value: types.SwitchboardDecimal.fromMoveStruct(obj.value),
            jobsChecksum: typeof obj.jobs_checksum === "string"
                ? new Uint8Array(Buffer.from(obj.jobs_checksum.slice(2), "hex"))
                : new Uint8Array(obj.jobs_checksum),
            minResponse: types.SwitchboardDecimal.fromMoveStruct(obj.min_response),
            maxResponse: types.SwitchboardDecimal.fromMoveStruct(obj.max_response),
        });
    }
}
exports.AggregatorSaveResultParams = AggregatorSaveResultParams;
