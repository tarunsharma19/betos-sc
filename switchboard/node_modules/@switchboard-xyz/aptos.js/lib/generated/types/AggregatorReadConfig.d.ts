import * as types from "./index.js";
import type { AccountAddressInput } from "@aptos-labs/ts-sdk";
import { BN } from "@switchboard-xyz/common";
export interface IAggregatorReadConfig {
    readCharge: BN;
    rewardEscrow: AccountAddressInput;
    readWhitelist: Array<AccountAddressInput>;
    limitReadsToWhitelist: boolean;
}
export interface AggregatorReadConfigJSON {
    readCharge: string;
    rewardEscrow: string;
    readWhitelist: Array<string>;
    limitReadsToWhitelist: boolean;
}
export interface AggregatorReadConfigMoveStruct {
    read_charge: string;
    reward_escrow: string;
    read_whitelist: Array<string>;
    limit_reads_to_whitelist: boolean;
}
export declare class AggregatorReadConfig implements IAggregatorReadConfig {
    readonly readCharge: BN;
    readonly rewardEscrow: AccountAddressInput;
    readonly readWhitelist: Array<AccountAddressInput>;
    readonly limitReadsToWhitelist: boolean;
    constructor(fields: IAggregatorReadConfig);
    toJSON(): AggregatorReadConfigJSON;
    static fromJSON(obj: AggregatorReadConfigJSON): types.AggregatorReadConfig;
    toMoveStruct(): AggregatorReadConfigMoveStruct;
    static fromMoveStruct(obj: AggregatorReadConfigMoveStruct): types.AggregatorReadConfig;
}
//# sourceMappingURL=AggregatorReadConfig.d.ts.map