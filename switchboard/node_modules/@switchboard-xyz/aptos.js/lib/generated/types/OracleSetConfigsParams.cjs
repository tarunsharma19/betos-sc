"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OracleSetConfigsParams = void 0;
class OracleSetConfigsParams {
    oracleAddr;
    name;
    metadata;
    oracleAuthority;
    queueAddr;
    constructor(fields) {
        this.oracleAddr = fields.oracleAddr;
        this.name = fields.name;
        this.metadata = fields.metadata;
        this.oracleAuthority = fields.oracleAuthority;
        this.queueAddr = fields.queueAddr;
    }
    toJSON() {
        return {
            oracleAddr: this.oracleAddr.toString(),
            name: [...this.name],
            metadata: [...this.metadata],
            oracleAuthority: this.oracleAuthority.toString(),
            queueAddr: this.queueAddr.toString(),
        };
    }
    static fromJSON(obj) {
        return new OracleSetConfigsParams({
            oracleAddr: obj.oracleAddr,
            name: new Uint8Array(obj.name),
            metadata: new Uint8Array(obj.metadata),
            oracleAuthority: obj.oracleAuthority,
            queueAddr: obj.queueAddr,
        });
    }
    toMoveStruct() {
        return {
            oracle_addr: this.oracleAddr.toString(),
            name: Buffer.from(this.name).toString("hex"),
            metadata: Buffer.from(this.metadata).toString("hex"),
            oracle_authority: this.oracleAuthority.toString(),
            queue_addr: this.queueAddr.toString(),
        };
    }
    static fromMoveStruct(obj) {
        return new OracleSetConfigsParams({
            oracleAddr: obj.oracle_addr,
            name: typeof obj.name === "string"
                ? new Uint8Array(Buffer.from(obj.name.slice(2), "hex"))
                : new Uint8Array(obj.name),
            metadata: typeof obj.metadata === "string"
                ? new Uint8Array(Buffer.from(obj.metadata.slice(2), "hex"))
                : new Uint8Array(obj.metadata),
            oracleAuthority: obj.oracle_authority,
            queueAddr: obj.queue_addr,
        });
    }
}
exports.OracleSetConfigsParams = OracleSetConfigsParams;
