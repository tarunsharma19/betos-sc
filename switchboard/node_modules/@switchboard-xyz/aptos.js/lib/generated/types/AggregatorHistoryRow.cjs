"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AggregatorHistoryRow = void 0;
const types = __importStar(require("./index.cjs")); // eslint-disable-line @typescript-eslint/no-unused-vars
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class AggregatorHistoryRow {
    value;
    timestamp;
    roundId;
    constructor(fields) {
        this.value = fields.value;
        this.timestamp = fields.timestamp;
        this.roundId = fields.roundId;
    }
    toJSON() {
        return {
            value: this.value.toJSON(),
            timestamp: this.timestamp.toString(),
            roundId: this.roundId.toString(),
        };
    }
    static fromJSON(obj) {
        return new AggregatorHistoryRow({
            value: types.SwitchboardDecimal.fromJSON(obj.value),
            timestamp: new common_1.BN(obj.timestamp),
            roundId: new common_1.BN(obj.roundId),
        });
    }
    toMoveStruct() {
        return {
            value: this.value.toMoveStruct(),
            timestamp: this.timestamp.toString(),
            round_id: this.roundId.toString(),
        };
    }
    static fromMoveStruct(obj) {
        return new AggregatorHistoryRow({
            value: types.SwitchboardDecimal.fromMoveStruct(obj.value),
            timestamp: new common_1.BN(obj.timestamp),
            roundId: new common_1.BN(obj.round_id),
        });
    }
}
exports.AggregatorHistoryRow = AggregatorHistoryRow;
