import * as types from "./index.js";
import type { AccountAddressInput } from "@aptos-labs/ts-sdk";
import { BN } from "@switchboard-xyz/common";
export interface IOracleQueue {
    name: Uint8Array;
    metadata: Uint8Array;
    authority: AccountAddressInput;
    oracleTimeout: BN;
    reward: BN;
    minStake: BN;
    slashingEnabled: boolean;
    varianceToleranceMultiplier: types.SwitchboardDecimal;
    feedProbationPeriod: BN;
    currIdx: BN;
    gcIdx: BN;
    consecutiveFeedFailureLimit: BN;
    consecutiveOracleFailureLimit: BN;
    unpermissionedFeedsEnabled: boolean;
    unpermissionedVrfEnabled: boolean;
    lockLeaseFunding: boolean;
    enableBufferRelayers: boolean;
    maxSize: BN;
    data: Array<AccountAddressInput>;
    createdAt: BN;
    features: Array<boolean>;
    _ebuf: Uint8Array;
}
export interface OracleQueueJSON {
    name: Array<number>;
    metadata: Array<number>;
    authority: string;
    oracleTimeout: string;
    reward: string;
    minStake: string;
    slashingEnabled: boolean;
    varianceToleranceMultiplier: types.SwitchboardDecimalJSON;
    feedProbationPeriod: string;
    currIdx: string;
    gcIdx: string;
    consecutiveFeedFailureLimit: string;
    consecutiveOracleFailureLimit: string;
    unpermissionedFeedsEnabled: boolean;
    unpermissionedVrfEnabled: boolean;
    lockLeaseFunding: boolean;
    enableBufferRelayers: boolean;
    maxSize: string;
    data: Array<string>;
    createdAt: string;
    features: Array<boolean>;
    _ebuf: Array<number>;
}
export interface OracleQueueMoveStruct {
    name: string;
    metadata: string;
    authority: string;
    oracle_timeout: string;
    reward: string;
    min_stake: string;
    slashing_enabled: boolean;
    variance_tolerance_multiplier: types.SwitchboardDecimalMoveStruct;
    feed_probation_period: string;
    curr_idx: string;
    gc_idx: string;
    consecutive_feed_failure_limit: string;
    consecutive_oracle_failure_limit: string;
    unpermissioned_feeds_enabled: boolean;
    unpermissioned_vrf_enabled: boolean;
    lock_lease_funding: boolean;
    enable_buffer_relayers: boolean;
    max_size: string;
    data: Array<string>;
    created_at: string;
    features: Array<boolean>;
    _ebuf: string;
}
export declare class OracleQueue implements IOracleQueue {
    readonly name: Uint8Array;
    readonly metadata: Uint8Array;
    readonly authority: AccountAddressInput;
    readonly oracleTimeout: BN;
    readonly reward: BN;
    readonly minStake: BN;
    readonly slashingEnabled: boolean;
    readonly varianceToleranceMultiplier: types.SwitchboardDecimal;
    readonly feedProbationPeriod: BN;
    readonly currIdx: BN;
    readonly gcIdx: BN;
    readonly consecutiveFeedFailureLimit: BN;
    readonly consecutiveOracleFailureLimit: BN;
    readonly unpermissionedFeedsEnabled: boolean;
    readonly unpermissionedVrfEnabled: boolean;
    readonly lockLeaseFunding: boolean;
    readonly enableBufferRelayers: boolean;
    readonly maxSize: BN;
    readonly data: Array<AccountAddressInput>;
    readonly createdAt: BN;
    readonly features: Array<boolean>;
    readonly _ebuf: Uint8Array;
    constructor(fields: IOracleQueue);
    toJSON(): OracleQueueJSON;
    static fromJSON(obj: OracleQueueJSON): types.OracleQueue;
    toMoveStruct(): OracleQueueMoveStruct;
    static fromMoveStruct(obj: OracleQueueMoveStruct): types.OracleQueue;
}
//# sourceMappingURL=OracleQueue.d.ts.map