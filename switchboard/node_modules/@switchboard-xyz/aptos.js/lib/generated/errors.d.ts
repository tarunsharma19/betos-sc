export declare enum SwitchboardErrorEnum {
    Generic = "Generic",
    StateNotFound = "StateNotFound",
    QueueNotFound = "QueueNotFound",
    OracleNotFound = "OracleNotFound",
    JobNotFound = "JobNotFound",
    CrankNotFound = "CrankNotFound",
    AggregatorNotFound = "AggregatorNotFound",
    LeaseNotFound = "LeaseNotFound",
    OracleWalletNotFound = "OracleWalletNotFound",
    StateAlreadyExists = "StateAlreadyExists",
    QueueAlreadyExists = "QueueAlreadyExists",
    OracleAlreadyExists = "OracleAlreadyExists",
    JobAlreadyExists = "JobAlreadyExists",
    CrankAlreadyExists = "CrankAlreadyExists",
    AggregatorAlreadyExists = "AggregatorAlreadyExists",
    LeaseAlreadyExists = "LeaseAlreadyExists",
    OracleWalletAlreadyExists = "OracleWalletAlreadyExists",
    InvalidAuthority = "InvalidAuthority",
    PermissionDenied = "PermissionDenied",
    CrankDisabled = "CrankDisabled",
    OracleMismatch = "OracleMismatch",
    JobsChecksumMismatch = "JobsChecksumMismatch",
    OracleAlreadyResponded = "OracleAlreadyResponded",
    InvalidArgument = "InvalidArgument",
    CrankNotReady = "CrankNotReady",
    CrankEmpty = "CrankEmpty",
    LeaseInactive = "LeaseInactive",
    AggregatorLocked = "AggregatorLocked",
    InsufficientCoin = "InsufficientCoin",
    LeaseInsufficientCoin = "LeaseInsufficientCoin",
    OracleWalletInsufficientCoin = "OracleWalletInsufficientCoin",
    AggregatorInvalidBatchSize = "AggregatorInvalidBatchSize",
    AggregatorInvalidMinOracleResults = "AggregatorInvalidMinOracleResults",
    AggregatorInvalidUpdateDelay = "AggregatorInvalidUpdateDelay",
    AggregatorIllegalRoundOpenCall = "AggregatorIllegalRoundOpenCall",
    AggregatorQueueNotReady = "AggregatorQueueNotReady",
    ResourceAlreadyExists = "ResourceAlreadyExists",
    PermissionAlreadyExists = "PermissionAlreadyExists"
}
export type SwitchboardErrorType = Generic | StateNotFound | QueueNotFound | OracleNotFound | JobNotFound | CrankNotFound | AggregatorNotFound | LeaseNotFound | OracleWalletNotFound | StateAlreadyExists | QueueAlreadyExists | OracleAlreadyExists | JobAlreadyExists | CrankAlreadyExists | AggregatorAlreadyExists | LeaseAlreadyExists | OracleWalletAlreadyExists | InvalidAuthority | PermissionDenied | CrankDisabled | OracleMismatch | JobsChecksumMismatch | OracleAlreadyResponded | InvalidArgument | CrankNotReady | CrankEmpty | LeaseInactive | AggregatorLocked | InsufficientCoin | LeaseInsufficientCoin | OracleWalletInsufficientCoin | AggregatorInvalidBatchSize | AggregatorInvalidMinOracleResults | AggregatorInvalidUpdateDelay | AggregatorIllegalRoundOpenCall | AggregatorQueueNotReady | ResourceAlreadyExists | PermissionAlreadyExists;
export declare abstract class SwitchboardError extends Error {
    readonly code: number;
    readonly hexCode: string;
    readonly name: string;
    readonly msg?: string | undefined;
    readonly logs?: string[];
    constructor(code: number, hexCode: string, name: string, msg?: string | undefined, logs?: string[]);
    static fromErrorType(errorType: SwitchboardErrorEnum, logs?: string[]): SwitchboardError;
}
export declare class Generic extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 0;
    static readonly hexCode = "0xb0000";
    constructor(logs?: string[] | undefined);
}
export declare class StateNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 1;
    static readonly hexCode = "0x60001";
    constructor(logs?: string[] | undefined);
}
export declare class QueueNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 2;
    static readonly hexCode = "0x60002";
    constructor(logs?: string[] | undefined);
}
export declare class OracleNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 3;
    static readonly hexCode = "0x60003";
    constructor(logs?: string[] | undefined);
}
export declare class JobNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 4;
    static readonly hexCode = "0x60004";
    constructor(logs?: string[] | undefined);
}
export declare class CrankNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 5;
    static readonly hexCode = "0x60005";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 6;
    static readonly hexCode = "0x60006";
    constructor(logs?: string[] | undefined);
}
export declare class LeaseNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 7;
    static readonly hexCode = "0x60007";
    constructor(logs?: string[] | undefined);
}
export declare class OracleWalletNotFound extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 8;
    static readonly hexCode = "0x60008";
    constructor(logs?: string[] | undefined);
}
export declare class StateAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 9;
    static readonly hexCode = "0x80009";
    constructor(logs?: string[] | undefined);
}
export declare class QueueAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 10;
    static readonly hexCode = "0x8000a";
    constructor(logs?: string[] | undefined);
}
export declare class OracleAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 11;
    static readonly hexCode = "0x8000b";
    constructor(logs?: string[] | undefined);
}
export declare class JobAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 12;
    static readonly hexCode = "0x8000c";
    constructor(logs?: string[] | undefined);
}
export declare class CrankAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 13;
    static readonly hexCode = "0x8000d";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 14;
    static readonly hexCode = "0x8000e";
    constructor(logs?: string[] | undefined);
}
export declare class LeaseAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 15;
    static readonly hexCode = "0x8000f";
    constructor(logs?: string[] | undefined);
}
export declare class OracleWalletAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 16;
    static readonly hexCode = "0x80010";
    constructor(logs?: string[] | undefined);
}
export declare class InvalidAuthority extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 17;
    static readonly hexCode = "0x50011";
    constructor(logs?: string[] | undefined);
}
export declare class PermissionDenied extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 18;
    static readonly hexCode = "0x50012";
    constructor(logs?: string[] | undefined);
}
export declare class CrankDisabled extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 19;
    static readonly hexCode = "0x50013";
    constructor(logs?: string[] | undefined);
}
export declare class OracleMismatch extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 20;
    static readonly hexCode = "0x10014";
    constructor(logs?: string[] | undefined);
}
export declare class JobsChecksumMismatch extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 21;
    static readonly hexCode = "0x10015";
    constructor(logs?: string[] | undefined);
}
export declare class OracleAlreadyResponded extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 22;
    static readonly hexCode = "0x10016";
    constructor(logs?: string[] | undefined);
}
export declare class InvalidArgument extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 23;
    static readonly hexCode = "0x10017";
    constructor(logs?: string[] | undefined);
}
export declare class CrankNotReady extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 24;
    static readonly hexCode = "0x30018";
    constructor(logs?: string[] | undefined);
}
export declare class CrankEmpty extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 25;
    static readonly hexCode = "0x30019";
    constructor(logs?: string[] | undefined);
}
export declare class LeaseInactive extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 26;
    static readonly hexCode = "0x3001a";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorLocked extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 27;
    static readonly hexCode = "0x3001b";
    constructor(logs?: string[] | undefined);
}
export declare class InsufficientCoin extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 28;
    static readonly hexCode = "0x9001c";
    constructor(logs?: string[] | undefined);
}
export declare class LeaseInsufficientCoin extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 29;
    static readonly hexCode = "0x9001d";
    constructor(logs?: string[] | undefined);
}
export declare class OracleWalletInsufficientCoin extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 30;
    static readonly hexCode = "0x9001e";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorInvalidBatchSize extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 31;
    static readonly hexCode = "0x1001f";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorInvalidMinOracleResults extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 32;
    static readonly hexCode = "0x10020";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorInvalidUpdateDelay extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 33;
    static readonly hexCode = "0x10021";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorIllegalRoundOpenCall extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 34;
    static readonly hexCode = "0x10022";
    constructor(logs?: string[] | undefined);
}
export declare class AggregatorQueueNotReady extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 35;
    static readonly hexCode = "0x10023";
    constructor(logs?: string[] | undefined);
}
export declare class ResourceAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 36;
    static readonly hexCode = "0x80024";
    constructor(logs?: string[] | undefined);
}
export declare class PermissionAlreadyExists extends SwitchboardError {
    readonly logs?: string[] | undefined;
    static readonly code = 37;
    static readonly hexCode = "0x80025";
    constructor(logs?: string[] | undefined);
}
//# sourceMappingURL=errors.d.ts.map