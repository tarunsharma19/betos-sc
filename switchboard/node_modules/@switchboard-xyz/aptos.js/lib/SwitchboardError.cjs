"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleError = exports.ErrorCodeMap = void 0;
const index_js_1 = require("./generated/index.cjs");
exports.ErrorCodeMap = new Map([
    ["0xb0000", index_js_1.SwitchboardErrorEnum["Generic"]],
    ["0x60001", index_js_1.SwitchboardErrorEnum["StateNotFound"]],
    ["0x60002", index_js_1.SwitchboardErrorEnum["QueueNotFound"]],
    ["0x60003", index_js_1.SwitchboardErrorEnum["OracleNotFound"]],
    ["0x60004", index_js_1.SwitchboardErrorEnum["JobNotFound"]],
    ["0x60005", index_js_1.SwitchboardErrorEnum["CrankNotFound"]],
    ["0x60006", index_js_1.SwitchboardErrorEnum["AggregatorNotFound"]],
    ["0x60007", index_js_1.SwitchboardErrorEnum["LeaseNotFound"]],
    ["0x60008", index_js_1.SwitchboardErrorEnum["OracleWalletNotFound"]],
    ["0x80009", index_js_1.SwitchboardErrorEnum["StateAlreadyExists"]],
    ["0x8000a", index_js_1.SwitchboardErrorEnum["QueueAlreadyExists"]],
    ["0x8000b", index_js_1.SwitchboardErrorEnum["OracleAlreadyExists"]],
    ["0x8000c", index_js_1.SwitchboardErrorEnum["JobAlreadyExists"]],
    ["0x8000d", index_js_1.SwitchboardErrorEnum["CrankAlreadyExists"]],
    ["0x8000e", index_js_1.SwitchboardErrorEnum["AggregatorAlreadyExists"]],
    ["0x8000f", index_js_1.SwitchboardErrorEnum["LeaseAlreadyExists"]],
    ["0x80010", index_js_1.SwitchboardErrorEnum["OracleWalletAlreadyExists"]],
    ["0x50011", index_js_1.SwitchboardErrorEnum["InvalidAuthority"]],
    ["0x50012", index_js_1.SwitchboardErrorEnum["PermissionDenied"]],
    ["0x50013", index_js_1.SwitchboardErrorEnum["CrankDisabled"]],
    ["0x10014", index_js_1.SwitchboardErrorEnum["OracleMismatch"]],
    ["0x10015", index_js_1.SwitchboardErrorEnum["JobsChecksumMismatch"]],
    ["0x10016", index_js_1.SwitchboardErrorEnum["OracleAlreadyResponded"]],
    ["0x10017", index_js_1.SwitchboardErrorEnum["InvalidArgument"]],
    ["0x30018", index_js_1.SwitchboardErrorEnum["CrankNotReady"]],
    ["0x30019", index_js_1.SwitchboardErrorEnum["CrankEmpty"]],
    ["0x3001a", index_js_1.SwitchboardErrorEnum["LeaseInactive"]],
    ["0x3001b", index_js_1.SwitchboardErrorEnum["AggregatorLocked"]],
    ["0x9001c", index_js_1.SwitchboardErrorEnum["InsufficientCoin"]],
    ["0x9001d", index_js_1.SwitchboardErrorEnum["LeaseInsufficientCoin"]],
    ["0x9001e", index_js_1.SwitchboardErrorEnum["OracleWalletInsufficientCoin"]],
    ["0x1001f", index_js_1.SwitchboardErrorEnum["AggregatorInvalidBatchSize"]],
    ["0x10020", index_js_1.SwitchboardErrorEnum["AggregatorInvalidMinOracleResults"]],
    ["0x10021", index_js_1.SwitchboardErrorEnum["AggregatorInvalidUpdateDelay"]],
    ["0x10022", index_js_1.SwitchboardErrorEnum["AggregatorIllegalRoundOpenCall"]],
    ["0x10023", index_js_1.SwitchboardErrorEnum["AggregatorQueueNotReady"]],
    ["0x80024", index_js_1.SwitchboardErrorEnum["ResourceAlreadyExists"]],
    ["0x80025", index_js_1.SwitchboardErrorEnum["PermissionAlreadyExists"]],
]);
const MoveAbortRegex = new RegExp(/Move abort in (?<programId>[^:]+)::(?<action>[^:]+): (?<errorCode>0x[a-fA-F0-9]+)/gm);
function handleError(error) {
    const errorString = `${error}`;
    const match = Array.from(errorString.matchAll(MoveAbortRegex));
    if (match && match.length) {
        const { programId, action, errorCode } = match[0].groups ?? {};
        if (!exports.ErrorCodeMap.has(errorCode)) {
            return undefined;
        }
        const error = exports.ErrorCodeMap.get(errorCode);
        return index_js_1.SwitchboardError.fromErrorType(error, [errorString]);
    }
    return undefined;
}
exports.handleError = handleError;
